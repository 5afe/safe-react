diff --git a/node_modules/bnc-onboard/dist/cjs/wallet-connect-62ebfee4.js b/node_modules/bnc-onboard/dist/cjs/wallet-connect-62ebfee4.js
index b531951..2f6c2ee 100644
--- a/node_modules/bnc-onboard/dist/cjs/wallet-connect-62ebfee4.js
+++ b/node_modules/bnc-onboard/dist/cjs/wallet-connect-62ebfee4.js
@@ -62,7 +62,7 @@ function walletConnect(options) {
     iconSrc: iconSrc,
     wallet: function () {
       var _wallet = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(helpers) {
-        var createProvider, _yield$Promise, WalletConnectProvider, resetWalletState, networkName, getBalance, rpcUrl, balanceProvider, provider;
+        var createProvider, _yield$Promise, WalletConnectProvider, resetWalletState, provider;
 
         return regeneratorRuntime.wrap(function _callee2$(_context2) {
           while (1) {
@@ -83,11 +83,7 @@ function walletConnect(options) {
               case 5:
                 _yield$Promise = _context2.sent;
                 WalletConnectProvider = _yield$Promise["default"];
-                resetWalletState = helpers.resetWalletState, networkName = helpers.networkName, getBalance = helpers.getBalance;
-                rpcUrl = rpc && rpc[networkId] ? rpc[networkId] : "https://".concat(networkName(networkId), ".infura.io/v3/").concat(infuraKey);
-                balanceProvider = createProvider({
-                  rpcUrl: rpcUrl
-                });
+                resetWalletState = helpers.resetWalletState;
 
                 if (!(infuraKey && rpc)) {
                   _context2.next = 12;
@@ -140,42 +136,7 @@ function walletConnect(options) {
                         provider.on('chainChanged', func);
                       }
                     },
-                    balance: {
-                      get: function () {
-                        var _get = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
-                          return regeneratorRuntime.wrap(function _callee$(_context) {
-                            while (1) {
-                              switch (_context.prev = _context.next) {
-                                case 0:
-                                  if (provider.wc._accounts[0]) {
-                                    _context.next = 2;
-                                    break;
-                                  }
-
-                                  return _context.abrupt("return", null);
-
-                                case 2:
-                                  return _context.abrupt("return", getBalance(balanceProvider, provider.wc._accounts[0]));
-
-                                case 3:
-                                case "end":
-                                  return _context.stop();
-                              }
-                            }
-                          }, _callee);
-                        }));
-
-                        function get() {
-                          return _get.apply(this, arguments);
-                        }
-
-                        return get;
-                      }()
-                    },
-                    disconnect: function disconnect() {
-                      provider.wc.killSession();
-                      provider.stop();
-                    }
+                    balance: {}
                   }
                 });
 
diff --git a/node_modules/bnc-onboard/dist/esm/wallet-connect-a5ae4fe8.js b/node_modules/bnc-onboard/dist/esm/wallet-connect-a5ae4fe8.js
index 00a3188..2f39c02 100644
--- a/node_modules/bnc-onboard/dist/esm/wallet-connect-a5ae4fe8.js
+++ b/node_modules/bnc-onboard/dist/esm/wallet-connect-a5ae4fe8.js
@@ -32,7 +32,7 @@ function walletConnect(options) {
     iconSrc: iconSrc,
     wallet: function () {
       var _wallet = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2(helpers) {
-        var createProvider, _yield$import, WalletConnectProvider, resetWalletState, networkName, getBalance, rpcUrl, balanceProvider, provider;
+        var createProvider, _yield$import, WalletConnectProvider, resetWalletState, provider;
 
         return regeneratorRuntime.wrap(function _callee2$(_context2) {
           while (1) {
@@ -49,11 +49,7 @@ function walletConnect(options) {
               case 5:
                 _yield$import = _context2.sent;
                 WalletConnectProvider = _yield$import["default"];
-                resetWalletState = helpers.resetWalletState, networkName = helpers.networkName, getBalance = helpers.getBalance;
-                rpcUrl = rpc && rpc[networkId] ? rpc[networkId] : "https://".concat(networkName(networkId), ".infura.io/v3/").concat(infuraKey);
-                balanceProvider = createProvider({
-                  rpcUrl: rpcUrl
-                });
+                resetWalletState = helpers.resetWalletState;
 
                 if (!(infuraKey && rpc)) {
                   _context2.next = 12;
@@ -106,38 +102,7 @@ function walletConnect(options) {
                         provider.on('chainChanged', func);
                       }
                     },
-                    balance: {
-                      get: function () {
-                        var _get = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
-                          return regeneratorRuntime.wrap(function _callee$(_context) {
-                            while (1) {
-                              switch (_context.prev = _context.next) {
-                                case 0:
-                                  if (provider.wc._accounts[0]) {
-                                    _context.next = 2;
-                                    break;
-                                  }
-
-                                  return _context.abrupt("return", null);
-
-                                case 2:
-                                  return _context.abrupt("return", getBalance(balanceProvider, provider.wc._accounts[0]));
-
-                                case 3:
-                                case "end":
-                                  return _context.stop();
-                              }
-                            }
-                          }, _callee);
-                        }));
-
-                        function get() {
-                          return _get.apply(this, arguments);
-                        }
-
-                        return get;
-                      }()
-                    },
+                    balance: {},
                     disconnect: function disconnect() {
                       provider.wc.killSession();
                       provider.stop();
