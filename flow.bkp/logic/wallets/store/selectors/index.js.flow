// @flow
import { createSelector } from 'reselect';
import { ETHEREUM_NETWORK, ETHEREUM_NETWORK_IDS } from 'src/logic/wallets/getWeb3';
import type { Provider } from 'src/logic/wallets/store/model/provider';
import { PROVIDER_REDUCER_ID } from 'src/logic/wallets/store/reducer/provider';
declare export var providerSelector: (state: any) => Provider;
export const userAccountSelector = createSelector(providerSelector, (provider: Provider) => {
  const account = provider.get('account');
  return account || '';
});
export const providerNameSelector = createSelector(providerSelector, (provider: Provider) => {
  const name = provider.get('name');
  return name ? name.toLowerCase() : undefined;
});
export const networkSelector = createSelector(providerSelector, (provider: Provider) => {
  const networkId = provider.get('network');
  const network = ETHEREUM_NETWORK_IDS[networkId] || ETHEREUM_NETWORK.UNKNOWN;
  return network;
});
export const loadedSelector = createSelector(providerSelector, (provider: Provider) => provider.get('loaded'));
export const availableSelector = createSelector(providerSelector, (provider: Provider) => provider.get('available'));