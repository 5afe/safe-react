// @flow
import { List } from 'immutable';
import type { Dispatch as ReduxDispatch } from 'redux';
import fetchTokenCurrenciesBalances from '~/logic/currencyValues/api/fetchTokenCurrenciesBalances';
import fetchCurrencySelectedValue from '~/logic/currencyValues/store/actions/fetchCurrencySelectedValue';
import { CURRENCY_SELECTED_KEY } from '~/logic/currencyValues/store/actions/saveCurrencySelected';
import { setCurrencyBalances } from '~/logic/currencyValues/store/actions/setCurrencyBalances';
import { setCurrencySelected } from '~/logic/currencyValues/store/actions/setCurrencySelected';
import { AVAILABLE_CURRENCIES, makeBalanceCurrency } from '~/logic/currencyValues/store/model/currencyValues';
import type { GlobalState } from '~/store';
import { loadFromStorage } from '~/utils/storage';
declare export var fetchCurrencyValues: (safeAddress: string) => any;
export default fetchCurrencyValues;