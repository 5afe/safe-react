/* eslint-disable import/named */
// @flow
import { List, Map } from 'immutable';
import { useSelector } from 'react-redux';
import { Selector, createSelector } from 'reselect';
import type { AddressBook } from 'src/logic/addressBook/model/addressBook';
import { ADDRESS_BOOK_REDUCER_ID } from 'src/logic/addressBook/store/reducer/addressBook';
import { safeParamAddressFromStateSelector } from 'src/routes/safe/store/selectors';
import type { GlobalState } from 'src/store';
declare export var addressBookMapSelector: (state: GlobalState) => Map<string, AddressBook>;
export const getAddressBook: Selector<GlobalState, AddressBook> = createSelector(addressBookMapSelector, safeParamAddressFromStateSelector, (addressBook: AddressBook, safeAddress: string) => {
  let result = Map([]);

  if (addressBook) {
    result = addressBook.get(safeAddress);
  }

  return result;
});
export const getAddressBookListSelector: Selector<GlobalState, {}, List<AddressBook>> = createSelector(addressBookMapSelector, safeParamAddressFromStateSelector, (addressBook: Map<string, AddressBook>, safeAddress: string): List<AddressBook> => {
  let result = List([]);

  if (addressBook) {
    result = List(addressBook.get(safeAddress));
  }

  return result;
});
declare export var getNameFromAddressBook: (userAddress: string) => string | null;