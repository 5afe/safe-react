// @flow
import type { AnyAction, Store } from 'redux';
import type { AddressBookProps } from '~/logic/addressBook/model/addressBook';
import { ADD_ENTRY } from '~/logic/addressBook/store/actions/addAddressBookEntry';
import { ADD_OR_UPDATE_ENTRY } from '~/logic/addressBook/store/actions/addOrUpdateAddressBookEntry';
import { REMOVE_ENTRY } from '~/logic/addressBook/store/actions/removeAddressBookEntry';
import { UPDATE_ENTRY } from '~/logic/addressBook/store/actions/updateAddressBookEntry';
import { addressBookMapSelector } from '~/logic/addressBook/store/selectors';
import { saveAddressBook } from '~/logic/addressBook/utils';
import { enhanceSnackbarForAction, getNotificationsFromTxType } from '~/logic/notifications';
import enqueueSnackbar from '~/logic/notifications/store/actions/enqueueSnackbar';
import { TX_NOTIFICATION_TYPES } from '~/logic/safe/transactions';
import { type GlobalState } from '~/store';
const watchedActions = [ADD_ENTRY, REMOVE_ENTRY, UPDATE_ENTRY, ADD_OR_UPDATE_ENTRY];
declare var addressBookMiddleware: (store: Store<GlobalState>) => any;
export default addressBookMiddleware;