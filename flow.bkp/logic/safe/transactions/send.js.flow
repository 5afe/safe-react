// @flow
import GnosisSafeSol from '@gnosis.pm/safe-contracts/build/contracts/GnosisSafe.json';
import { type Operation } from '~/logic/safe/transactions';
import { getWeb3 } from '~/logic/wallets/getWeb3';
export const CALL = 0;
export const DELEGATE_CALL = 1;
export const TX_TYPE_EXECUTION = 'execution';
export const TX_TYPE_CONFIRMATION = 'confirmation';
type Transaction = {
  safeInstance: any,
  to: string,
  valueInWei: number | string,
  data: string,
  operation: Operation,
  safeTxGas: number,
  baseGas: number,
  gasPrice: number,
  gasToken: string,
  refundReceiver: string,
};
declare export var getApprovalTransaction: (arg0: Transaction & {
  nonce: number | string,
  sender: string,
}) => any;
declare export var getExecutionTransaction: (arg0: Transaction & {
  sigs: string
}) => any;