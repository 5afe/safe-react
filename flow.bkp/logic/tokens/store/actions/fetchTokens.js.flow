// @flow
import StandardToken from '@gnosis.pm/util-contracts/build/contracts/GnosisStandardToken.json';
import HumanFriendlyToken from '@gnosis.pm/util-contracts/build/contracts/HumanFriendlyToken.json';
import ERC721 from '@openzeppelin/contracts/build/contracts/ERC721';
import { List } from 'immutable';
import type { Dispatch as ReduxDispatch } from 'redux';
import contract from 'truffle-contract';
import saveTokens from './saveTokens';
import { fetchTokenList } from '~/logic/tokens/api';
import { type TokenProps, makeToken } from '~/logic/tokens/store/model/token';
import { tokensSelector } from '~/logic/tokens/store/selectors';
import { getWeb3 } from '~/logic/wallets/getWeb3';
import { type GlobalState } from '~/store';
import { store } from '~/store/index';
import { ensureOnce } from '~/utils/singleton';
declare var createStandardTokenContract: () => any;
declare var createHumanFriendlyTokenContract: () => any;
declare var createERC721TokenContract: () => any;
const OnlyBalanceToken = {
  contractName: 'OnlyBalanceToken',
  abi: [{
    constant: true,
    inputs: [{
      name: 'owner',
      type: 'address'
    }],
    name: 'balanceOf',
    outputs: [{
      name: '',
      type: 'uint256'
    }],
    payable: false,
    stateMutability: 'view',
    type: 'function'
  }, {
    constant: true,
    inputs: [{
      name: 'owner',
      type: 'address'
    }],
    name: 'balances',
    outputs: [{
      name: '',
      type: 'uint256'
    }],
    payable: false,
    stateMutability: 'view',
    type: 'function'
  }]
}; // For the `batchRequest` of balances, we're just using the `balanceOf` method call.
// So having a simple ABI only with `balanceOf` prevents errors
// when instantiating non-standard ERC-20 Tokens.

declare var createOnlyBalanceToken: () => any;
export const getHumanFriendlyToken = ensureOnce(createHumanFriendlyTokenContract);
export const getStandardTokenContract = ensureOnce(createStandardTokenContract);
export const getERC721TokenContract = ensureOnce(createERC721TokenContract);
export const getOnlyBalanceToken = ensureOnce(createOnlyBalanceToken);
declare export var containsMethodByHash: (contractAddress: string, methodHash: string) => any;
declare export var getTokenInfos: (tokenAddress: string) => any;
declare export var fetchTokens: () => any;
export default fetchTokens;