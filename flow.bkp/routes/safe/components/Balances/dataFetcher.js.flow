// @flow
import { List } from 'immutable';
import { type Column } from 'src/components/Table/TableHead';
import { FIXED, type SortRow, buildOrderFieldFrom } from 'src/components/Table/sorting';
import type { BalanceCurrencyType } from 'src/logic/currencyValues/store/model/currencyValues';
import { AVAILABLE_CURRENCIES } from 'src/logic/currencyValues/store/model/currencyValues';
import { type Token } from 'src/logic/tokens/store/model/token';
import { formatAmount } from 'src/logic/tokens/utils/formatAmount';
import { ETH_ADDRESS } from 'src/logic/tokens/utils/tokenHelpers';
export const BALANCE_TABLE_ASSET_ID = 'asset';
export const BALANCE_TABLE_BALANCE_ID = 'balance';
export const BALANCE_TABLE_VALUE_ID = 'value';
type BalanceData = {
  asset: Object,
  balance: string,
};
export type BalanceRow = SortRow<BalanceData>; // eslint-disable-next-line max-len

declare var getTokenPriceInCurrency: (token: Token, currencySelected: typeof AVAILABLE_CURRENCIES, currencyValues: List<BalanceCurrencyType>) => string; // eslint-disable-next-line max-len

declare export var getBalanceData: (activeTokens: List<Token>, currencySelected: string, currencyValues: List<BalanceCurrencyType>) => List<BalanceRow>;
declare export var generateColumns: () => any; // eslint-disable-next-line max-len

declare export var filterByZero: (data: List<BalanceRow>, hideZero: boolean) => List<BalanceRow>;