// @flow
import { List } from 'immutable';
import type { GetState, Dispatch as ReduxDispatch } from 'redux';
import { createAction } from 'redux-actions';
import setDefaultSafe from 'src/routes/safe/store/actions/setDefaultSafe';
import { makeOwner } from 'src/routes/safe/store/models/owner';
import { type Safe } from 'src/routes/safe/store/models/safe';
import { safesListSelector } from 'src/routes/safe/store/selectors';
import { type GlobalState } from 'src/store';
export const ADD_SAFE = 'ADD_SAFE';
declare export var buildOwnersFrom: (names: Array<string>, addresses: Array<string>) => any;
type ActionReturn = {
  safe: Safe
};
export const addSafe = createAction<string, Function, ActionReturn>(ADD_SAFE, (safe: Safe): ActionReturn => ({
  safe
}));
declare var saveSafe: (safe: Safe) => any;
export default saveSafe;