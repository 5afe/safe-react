// @flow
import React, { useEffect, useState } from 'react';
import { connect } from 'react-redux';
import { Redirect, Route, Switch, withRouter } from 'react-router-dom';
import { LOAD_ADDRESS, OPEN_ADDRESS, SAFELIST_ADDRESS, SAFE_PARAM_ADDRESS, WELCOME_ADDRESS } from './routes';
import Welcome from './welcome/container';
import Loader from '~/components/Loader';
import { defaultSafeSelector } from '~/routes/safe/store/selectors';
import { withTracker } from '~/utils/googleAnalytics';
const Safe = React.lazy(() => import('./safe/container'));
const Open = React.lazy(() => import('./open/container/Open'));
const Load = React.lazy(() => import('./load/container/Load'));
const SAFE_ADDRESS = `${SAFELIST_ADDRESS}/:${SAFE_PARAM_ADDRESS}`;
type RoutesProps = {
  defaultSafe?: string,
  location: Object,
};
declare var Routes: (arg0: RoutesProps) => any; // $FlowFixMe

export default connect<Object, Object, ?Function, ?Object>(state => ({
  defaultSafe: defaultSafeSelector(state)
}), null)(withRouter(Routes));